<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs title="Test API Calendar" height="400" title_url="http://www.risevision.com/help/users/what-are-gadgets/free-gadgets/rise-vision-clock/">
    <Require feature="rpc" />
    <Optional feature="rise-api">
        <Param name="reports_ready" />
    </Optional>
    </ModulePrefs>
    <UserPref name="id" display_name="ID" default_value="" datatype="hidden" />
    <UserPref name="showTime" display_name="Show Time?" datatype="bool" default_value="true" />
    <UserPref name="timeFormat" display_name="Time Format" datatype="enum" default_value="12hTime">
    <EnumValue value="12hTime" display_value="12-hour"/>
    <EnumValue value="24hTime" display_value="24-hour"/>
    </UserPref>
    <UserPref name="showDate" display_name="Show Date?" datatype="bool" default_value="true" />
    <UserPref name="dateFormat" display_name="Date Format" datatype="enum" default_value="longDate">
    <EnumValue value="shortDate" display_value="mm/dd/yyyy"/>
    <EnumValue value="europeanDate" display_value="dd/mm/yyyy"/>
    <EnumValue value="mediumDate" display_value="mmm dd yyyy"/>
    <EnumValue value="longDate" display_value="Month dd, yyyy"/>
    </UserPref>
    <UserPref name="text_font-style" display_name="Font" datatype="string" default_value=".text_font-style{font-family:Verdana, Verdana, Geneva, sans-serif;color:rgb(0, 0, 0);font-size:20px;}"/>
    <UserPref name="backgroundColor" display_name="Background Color" default_value="" datatype="string"/>
    <UserPref name="rsH" display_name="Container Height" default_value="100%" datatype="hidden"/>
    <UserPref name="rsW" display_name="Container Width" default_value="100%" datatype="hidden"/>
    <UserPref name="rsS" display_name="Scale" default_value="100" datatype="hidden"/>
    <UserPref name="rsA" display_name="Alignment" default_value="mc" datatype="hidden"/>
    <Content type="html">
    <![CDATA[

    <style type="text/css">
        body, div {
        background: transparent;
        text-align: center;
        
        /* user can't select text on a touchscreen */
        user-select: none;
        -moz-user-select: none;
        -webkit-user-select: none;
        -khtml-user-select: none; 
        }

       __UP_text_font-style__
  
        #eventos{background: #CCC; width: 1300px; padding: 0;}
        #eventos > div {float: left; border: 1px solid; padding: 10px; width: 30%; margin: 0.5%; max-width: 30%;}
        #eventos ul {margin: 0; padding: 0; padding-bottom: 20px;}
        #eventos ul li{display: block; margin: 10px 0;}
        #eventos ul li.clear{background: yellow; clear: both;}

        #eventos div ul li.evt_summary{font-size: 20px; font-weight: bold; border-bottom: 2px solid #333;}

        #eventos:after, #eventos:before{display: table; content: " ";}
        #eventos:after{clear: both;}    
    </style>


    <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script> -->
    <script src="http://code.jquery.com/jquery-1.11.2.min.js"></script>
    <script type="text/javascript">
        
        var prefs = new gadgets.Prefs();
        
        //Issue 1041 - Disable right-click.
        window.oncontextmenu = function() {
        return false;
        };
        
        //Add Analytics code.
        var _gaq = _gaq || [];
        
        _gaq.push(['_setAccount', 'UA-41395348-14']);
        _gaq.push(['_trackPageview']);
      
        (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
        
        function play() {
        
        }
        
        function pause() {
        
        }
        
        function stop() {
        
        }
        
        function readyEvent() {
        gadgets.rpc.call('', 'rsevent_ready', null, prefs.getString("id"), true, true, true, true, true);
        }
        
        function doneEvent() {
        gadgets.rpc.call('', 'rsevent_done', null, prefs.getString("id"));
        }
        
        function initClock() {
        var id = prefs.getString("id");
        var backgroundColor = prefs.getString("backgroundColor");
     
        // register your RPC calls (communicate with the viewer application) 
        // each one of these is a command. the Viewer will send this command, and the function
        // in the command will be called. For example the first one, once rscmd_play_ + id is called, the play();
        // function is called 
        if (id !== null && id != "") {
            gadgets.rpc.register("rscmd_play_" + id, play);
            gadgets.rpc.register("rscmd_pause_" + id, pause);
            gadgets.rpc.register("rscmd_stop_" + id, stop);
        } 
     
        if (backgroundColor !== null && backgroundColor != "") {
            document.body.style.background = backgroundColor;
        } 
     
        clock();
        readyEvent();
        }
        
        function clock() {
            var backgroundColor = prefs.getString("backgroundColor");

            var key = "AIzaSyBcVaj4FrVL2bm5ZZ0dsZJtiDD-_ac-_lM";
            var calendar_id = "ls65k1pj4n8m6pudancii5d35s%40group.calendar.google.com";
            var url_base = "https://www.googleapis.com/calendar/v3/calendars/"+calendar_id+"/events";
            var num_dias = 15;
            var query = "?"+getFilterDate(num_dias)+"&key="+key;
            var url = url_base+query;             

            var eventos = [];

            // Inicializa a estrutura que conterá os HTMLs com os eventos de cada dia
            for(var j=0; j<num_dias; j++){
                var auxDate = new Date();
                auxDate.setDate(auxDate.getDate()+j);
                eventos[auxDate.getDate()+"/"+(auxDate.getMonth()+1)] = [];
            }


            $.getJSON( url, function( data ) {
                var items = [];         
                $("#eventos").append("<h2> " + data.summary + "</h2>");
                $("#eventos").append("<h4> " + data.description + "</h4>");
            
                $.when($.each( data.items, function( key, val ) {

                    var novoItem = "";
            
                    var hasTimeStt = (typeof val.start.dateTime !== 'undefined');
                    var dateStt = (hasTimeStt) ? val.start.dateTime : val.start.date;
                    var inicio = new Date(dateStt);

                    var hasTimeEnd = (typeof val.end.dateTime !== "undefined");
                    var dateEnd = (hasTimeEnd) ? val.end.dateTime : val.end.date;
                    var fim = new Date(dateEnd);

                    // Problema: Eventos sem info de tempo, ficam como começando as 00:00 (GTM) e voltam um dia no horário local!
                    // Correção para que os eventos sem data fiquem no fuso horário local
                    if (!hasTimeStt){
                        inicio.setTime(inicio.getTime() + (inicio.getTimezoneOffset() * 60 * 1000));
                    }

                    if (!hasTimeEnd){
                        fim.setTime(fim.getTime() + (fim.getTimezoneOffset() * 60 * 1000)); // Adiciona a hora local ao final do evento;
                    }

                    if (!hasTimeStt && !hasTimeEnd){
                        val['allDay'] = true;
                    }
                    else{
                        val['allDay'] = false;
                    }

                    val['inicio'] = inicio;
                    val['fim'] = fim;


                    // Adicionando o HTML do evento ao array para exibição
                    novoItem += getFormatedEvent(val);
                    var chave = inicio.getDate()+"/"+(inicio.getMonth()+1);
                    if(chave in eventos){
                        eventos[chave].push(novoItem);
                    }
                })).done(function(){       

                    for(var dia in eventos){
                      if(typeof eventos[dia] !== 'undefined'){
                        if(eventos[dia].length > 0){
                          var content = "<div class='day_event'>";
                          content += "<h2> "+dia+"</h2>";
                          for(var evt in eventos[dia]){                
                            content += eventos[dia][evt] + "<hr />";
                          }
                          content += "</div>"

                          $("#eventos").append(content);
                        }
                      }  
                    }
              });
            });

            setTimeout("clock()", 300000);
        }
        
        gadgets.util.registerOnLoadHandler(initClock); 



        function getFilterDate(num_days){
    var hoje = new Date();
    var ultimo_dia = new Date();
    ultimo_dia.setDate(hoje.getDate() + num_days-1);

    hoje.setHours(0);
    hoje.setMinutes(0);
    hoje.setSeconds(0);

    ultimo_dia.setHours(23);
    ultimo_dia.setMinutes(59);
    ultimo_dia.setSeconds(59);

    var filtro = "timeMin="+hoje.toISOString()+"&timeMax="+ultimo_dia.toISOString();
    return filtro;
  }


  // Retorna a Div contendo as informações do evento
  function getFormatedEvent(evento){
     
      var item = "<ul>";
      var time = "";
      var description = getFormatedDescription(evento.description);

      if (!evento.allDay){
        time = evento.inicio.getHours() + ":" + ("00" + evento.inicio.getMinutes()).slice(-2) + " - " + evento.fim.getHours() + ":" + ("00" + evento.fim.getMinutes() + "00").slice(-2);
        time = "<li class='evt_time'>" + time + "</li>";
      }

      item += "<li class='evt_summary'>"+evento.summary+"</li>";
      item += time;
      item += (description.length > 0) ? "<li class='evt_desc'>"+description+"</li>" : "";
      item += (typeof evento.location !== 'undefined') ? "<li class='evt_location'>"+evento.location+"</li>" : "";
      
      item += "<li>AllDay: "+(evento.allDay ? "Yes" : "No")+"</li>"; 
      item += "</ul>";

      return item;
  }



  function getFormatedDescription(description){
    var aux = "";
    var img_token = "\#img=";   
    var position;   

    if (typeof description !== 'undefined') {

      description = description.toString();

      if((position = description.search(img_token)) != -1){

        var offset = position + img_token.length;
        if(description.substr(offset).search(/[ ]/) != -1){
          aux = "<img src='"+description.substring((offset), (description.substr(offset).search(/[ ]/)+(offset)))+"' />";
        }
        else{
          aux = "<img src='"+description.substr(offset)+"' />"; 
        }
      }
      else{
        aux = description; 
      }
    }
    return aux;    
  }
    </script>
    
         
    <div id="eventos" class="text_font-style" style="height:100%;width:100%;">
    </div>
    ]]>
    </Content>
</Module>